# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class PartnerEndCustomerOAuthStatusUpdatedWebhook(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The webhook of type `PARTNER` and code `END_CUSTOMER_OAUTH_STATUS_UPDATED` will be fired when a partner's end customer has an update on their OAuth registration status with an institution.
    """


    class MetaOapg:
        required = {
            "end_customer_client_id",
            "environment",
            "webhook_type",
            "webhook_code",
            "institution_name",
            "institution_id",
            "status",
        }
        
        class properties:
            webhook_type = schemas.StrSchema
            webhook_code = schemas.StrSchema
            end_customer_client_id = schemas.StrSchema
        
            @staticmethod
            def environment() -> typing.Type['WebhookEnvironmentValues']:
                return WebhookEnvironmentValues
            institution_id = schemas.StrSchema
            institution_name = schemas.StrSchema
        
            @staticmethod
            def status() -> typing.Type['PartnerEndCustomerOAuthStatusUpdatedValues']:
                return PartnerEndCustomerOAuthStatusUpdatedValues
            __annotations__ = {
                "webhook_type": webhook_type,
                "webhook_code": webhook_code,
                "end_customer_client_id": end_customer_client_id,
                "environment": environment,
                "institution_id": institution_id,
                "institution_name": institution_name,
                "status": status,
            }
    
    end_customer_client_id: MetaOapg.properties.end_customer_client_id
    environment: 'WebhookEnvironmentValues'
    webhook_type: MetaOapg.properties.webhook_type
    webhook_code: MetaOapg.properties.webhook_code
    institution_name: MetaOapg.properties.institution_name
    institution_id: MetaOapg.properties.institution_id
    status: 'PartnerEndCustomerOAuthStatusUpdatedValues'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["webhook_type"]) -> MetaOapg.properties.webhook_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["webhook_code"]) -> MetaOapg.properties.webhook_code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["end_customer_client_id"]) -> MetaOapg.properties.end_customer_client_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["environment"]) -> 'WebhookEnvironmentValues': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["institution_id"]) -> MetaOapg.properties.institution_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["institution_name"]) -> MetaOapg.properties.institution_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> 'PartnerEndCustomerOAuthStatusUpdatedValues': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["webhook_type", "webhook_code", "end_customer_client_id", "environment", "institution_id", "institution_name", "status", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["webhook_type"]) -> MetaOapg.properties.webhook_type: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["webhook_code"]) -> MetaOapg.properties.webhook_code: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["end_customer_client_id"]) -> MetaOapg.properties.end_customer_client_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["environment"]) -> 'WebhookEnvironmentValues': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["institution_id"]) -> MetaOapg.properties.institution_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["institution_name"]) -> MetaOapg.properties.institution_name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> 'PartnerEndCustomerOAuthStatusUpdatedValues': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["webhook_type", "webhook_code", "end_customer_client_id", "environment", "institution_id", "institution_name", "status", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        end_customer_client_id: typing.Union[MetaOapg.properties.end_customer_client_id, str, ],
        environment: 'WebhookEnvironmentValues',
        webhook_type: typing.Union[MetaOapg.properties.webhook_type, str, ],
        webhook_code: typing.Union[MetaOapg.properties.webhook_code, str, ],
        institution_name: typing.Union[MetaOapg.properties.institution_name, str, ],
        institution_id: typing.Union[MetaOapg.properties.institution_id, str, ],
        status: 'PartnerEndCustomerOAuthStatusUpdatedValues',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PartnerEndCustomerOAuthStatusUpdatedWebhook':
        return super().__new__(
            cls,
            *_args,
            end_customer_client_id=end_customer_client_id,
            environment=environment,
            webhook_type=webhook_type,
            webhook_code=webhook_code,
            institution_name=institution_name,
            institution_id=institution_id,
            status=status,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.partner_end_customer_o_auth_status_updated_values import PartnerEndCustomerOAuthStatusUpdatedValues
from plaid.model.webhook_environment_values import WebhookEnvironmentValues
