# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class IdentityVerificationRetryRequestStepsObject(
    schemas.DictBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneFrozenDictMixin
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Instructions for the `custom` retry strategy specifying which steps should be required or skipped.


Note:


This field must be provided when the retry strategy is `custom` and must be omitted otherwise.

Custom retries override settings in your Plaid Template. For example, if your Plaid Template has `verify_sms` disabled, a custom retry with `verify_sms` enabled will still require the step.

The `selfie_check` step is currently not supported on the sandbox server. Sandbox requests will silently disable the `selfie_check` step when provided.
    """


    class MetaOapg:
        required = {
            "verify_sms",
            "documentary_verification",
            "selfie_check",
            "kyc_check",
        }
        
        class properties:
            verify_sms = schemas.BoolSchema
            kyc_check = schemas.BoolSchema
            documentary_verification = schemas.BoolSchema
            selfie_check = schemas.BoolSchema
            __annotations__ = {
                "verify_sms": verify_sms,
                "kyc_check": kyc_check,
                "documentary_verification": documentary_verification,
                "selfie_check": selfie_check,
            }

    
    verify_sms: MetaOapg.properties.verify_sms
    documentary_verification: MetaOapg.properties.documentary_verification
    selfie_check: MetaOapg.properties.selfie_check
    kyc_check: MetaOapg.properties.kyc_check
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["verify_sms"]) -> MetaOapg.properties.verify_sms: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["kyc_check"]) -> MetaOapg.properties.kyc_check: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["documentary_verification"]) -> MetaOapg.properties.documentary_verification: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["selfie_check"]) -> MetaOapg.properties.selfie_check: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["verify_sms", "kyc_check", "documentary_verification", "selfie_check", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["verify_sms"]) -> MetaOapg.properties.verify_sms: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["kyc_check"]) -> MetaOapg.properties.kyc_check: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["documentary_verification"]) -> MetaOapg.properties.documentary_verification: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["selfie_check"]) -> MetaOapg.properties.selfie_check: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["verify_sms", "kyc_check", "documentary_verification", "selfie_check", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, None, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'IdentityVerificationRetryRequestStepsObject':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
            **kwargs,
        )
