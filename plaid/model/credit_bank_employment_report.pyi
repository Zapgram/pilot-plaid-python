# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class CreditBankEmploymentReport(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The report of the Bank Employment data for an end user.
    """


    class MetaOapg:
        required = {
            "warnings",
            "bank_employment_report_id",
            "items",
            "generated_time",
            "days_requested",
        }
        
        class properties:
            bank_employment_report_id = schemas.StrSchema
            generated_time = schemas.DateTimeSchema
            days_requested = schemas.IntSchema
            
            
            class items(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CreditBankEmploymentItem']:
                        return CreditBankEmploymentItem
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['CreditBankEmploymentItem'], typing.List['CreditBankEmploymentItem']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'items':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CreditBankEmploymentItem':
                    return super().__getitem__(i)
            
            
            class warnings(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CreditBankEmploymentWarning']:
                        return CreditBankEmploymentWarning
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['CreditBankEmploymentWarning'], typing.List['CreditBankEmploymentWarning']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'warnings':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CreditBankEmploymentWarning':
                    return super().__getitem__(i)
            __annotations__ = {
                "bank_employment_report_id": bank_employment_report_id,
                "generated_time": generated_time,
                "days_requested": days_requested,
                "items": items,
                "warnings": warnings,
            }
    
    warnings: MetaOapg.properties.warnings
    bank_employment_report_id: MetaOapg.properties.bank_employment_report_id
    items: MetaOapg.properties.items
    generated_time: MetaOapg.properties.generated_time
    days_requested: MetaOapg.properties.days_requested
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bank_employment_report_id"]) -> MetaOapg.properties.bank_employment_report_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["generated_time"]) -> MetaOapg.properties.generated_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["days_requested"]) -> MetaOapg.properties.days_requested: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["items"]) -> MetaOapg.properties.items: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["warnings"]) -> MetaOapg.properties.warnings: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["bank_employment_report_id", "generated_time", "days_requested", "items", "warnings", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bank_employment_report_id"]) -> MetaOapg.properties.bank_employment_report_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["generated_time"]) -> MetaOapg.properties.generated_time: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["days_requested"]) -> MetaOapg.properties.days_requested: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["items"]) -> MetaOapg.properties.items: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["warnings"]) -> MetaOapg.properties.warnings: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["bank_employment_report_id", "generated_time", "days_requested", "items", "warnings", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        warnings: typing.Union[MetaOapg.properties.warnings, list, tuple, ],
        bank_employment_report_id: typing.Union[MetaOapg.properties.bank_employment_report_id, str, ],
        items: typing.Union[MetaOapg.properties.items, list, tuple, ],
        generated_time: typing.Union[MetaOapg.properties.generated_time, str, datetime, ],
        days_requested: typing.Union[MetaOapg.properties.days_requested, decimal.Decimal, int, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CreditBankEmploymentReport':
        return super().__new__(
            cls,
            *_args,
            warnings=warnings,
            bank_employment_report_id=bank_employment_report_id,
            items=items,
            generated_time=generated_time,
            days_requested=days_requested,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.credit_bank_employment_item import CreditBankEmploymentItem
from plaid.model.credit_bank_employment_warning import CreditBankEmploymentWarning
