# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class RiskCheckEmail(
    schemas.DictBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneFrozenDictMixin
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Result summary object specifying values for `email` attributes of risk check.
    """


    class MetaOapg:
        required = {
            "breach_count",
            "last_breached_at",
            "domain_is_free_provider",
            "domain_registered_at",
            "first_breached_at",
            "top_level_domain_is_suspicious",
            "domain_is_custom",
            "is_deliverable",
            "domain_is_disposable",
            "linked_services",
        }
        
        class properties:
        
            @staticmethod
            def is_deliverable() -> typing.Type['RiskCheckEmailIsDeliverableStatus']:
                return RiskCheckEmailIsDeliverableStatus
            
            
            class breach_count(
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'breach_count':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
        
            @staticmethod
            def first_breached_at() -> typing.Type['ISO8601DateNullable']:
                return ISO8601DateNullable
        
            @staticmethod
            def last_breached_at() -> typing.Type['ISO8601DateNullable']:
                return ISO8601DateNullable
        
            @staticmethod
            def domain_registered_at() -> typing.Type['ISO8601DateNullable']:
                return ISO8601DateNullable
        
            @staticmethod
            def domain_is_free_provider() -> typing.Type['RiskCheckEmailDomainIsFreeProvider']:
                return RiskCheckEmailDomainIsFreeProvider
        
            @staticmethod
            def domain_is_custom() -> typing.Type['RiskCheckEmailDomainIsCustom']:
                return RiskCheckEmailDomainIsCustom
        
            @staticmethod
            def domain_is_disposable() -> typing.Type['RiskCheckEmailDomainIsDisposable']:
                return RiskCheckEmailDomainIsDisposable
        
            @staticmethod
            def top_level_domain_is_suspicious() -> typing.Type['RiskCheckEmailTopLevelDomainIsSuspicious']:
                return RiskCheckEmailTopLevelDomainIsSuspicious
            
            
            class linked_services(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['RiskCheckLinkedService']:
                        return RiskCheckLinkedService
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['RiskCheckLinkedService'], typing.List['RiskCheckLinkedService']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'linked_services':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'RiskCheckLinkedService':
                    return super().__getitem__(i)
            __annotations__ = {
                "is_deliverable": is_deliverable,
                "breach_count": breach_count,
                "first_breached_at": first_breached_at,
                "last_breached_at": last_breached_at,
                "domain_registered_at": domain_registered_at,
                "domain_is_free_provider": domain_is_free_provider,
                "domain_is_custom": domain_is_custom,
                "domain_is_disposable": domain_is_disposable,
                "top_level_domain_is_suspicious": top_level_domain_is_suspicious,
                "linked_services": linked_services,
            }
        additional_properties = schemas.AnyTypeSchema

    
    breach_count: MetaOapg.properties.breach_count
    last_breached_at: 'ISO8601DateNullable'
    domain_is_free_provider: 'RiskCheckEmailDomainIsFreeProvider'
    domain_registered_at: 'ISO8601DateNullable'
    first_breached_at: 'ISO8601DateNullable'
    top_level_domain_is_suspicious: 'RiskCheckEmailTopLevelDomainIsSuspicious'
    domain_is_custom: 'RiskCheckEmailDomainIsCustom'
    is_deliverable: 'RiskCheckEmailIsDeliverableStatus'
    domain_is_disposable: 'RiskCheckEmailDomainIsDisposable'
    linked_services: MetaOapg.properties.linked_services
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["breach_count"]) -> MetaOapg.properties.breach_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_breached_at"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["domain_is_free_provider"]) -> 'RiskCheckEmailDomainIsFreeProvider': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["domain_registered_at"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_breached_at"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["top_level_domain_is_suspicious"]) -> 'RiskCheckEmailTopLevelDomainIsSuspicious': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["domain_is_custom"]) -> 'RiskCheckEmailDomainIsCustom': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_deliverable"]) -> 'RiskCheckEmailIsDeliverableStatus': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["domain_is_disposable"]) -> 'RiskCheckEmailDomainIsDisposable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["linked_services"]) -> MetaOapg.properties.linked_services: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["breach_count"], typing_extensions.Literal["last_breached_at"], typing_extensions.Literal["domain_is_free_provider"], typing_extensions.Literal["domain_registered_at"], typing_extensions.Literal["first_breached_at"], typing_extensions.Literal["top_level_domain_is_suspicious"], typing_extensions.Literal["domain_is_custom"], typing_extensions.Literal["is_deliverable"], typing_extensions.Literal["domain_is_disposable"], typing_extensions.Literal["linked_services"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["breach_count"]) -> MetaOapg.properties.breach_count: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_breached_at"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["domain_is_free_provider"]) -> 'RiskCheckEmailDomainIsFreeProvider': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["domain_registered_at"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_breached_at"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["top_level_domain_is_suspicious"]) -> 'RiskCheckEmailTopLevelDomainIsSuspicious': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["domain_is_custom"]) -> 'RiskCheckEmailDomainIsCustom': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_deliverable"]) -> 'RiskCheckEmailIsDeliverableStatus': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["domain_is_disposable"]) -> 'RiskCheckEmailDomainIsDisposable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["linked_services"]) -> MetaOapg.properties.linked_services: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["breach_count"], typing_extensions.Literal["last_breached_at"], typing_extensions.Literal["domain_is_free_provider"], typing_extensions.Literal["domain_registered_at"], typing_extensions.Literal["first_breached_at"], typing_extensions.Literal["top_level_domain_is_suspicious"], typing_extensions.Literal["domain_is_custom"], typing_extensions.Literal["is_deliverable"], typing_extensions.Literal["domain_is_disposable"], typing_extensions.Literal["linked_services"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, None, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'RiskCheckEmail':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.iso8601_date_nullable import ISO8601DateNullable
from plaid.model.risk_check_email_domain_is_custom import RiskCheckEmailDomainIsCustom
from plaid.model.risk_check_email_domain_is_disposable import RiskCheckEmailDomainIsDisposable
from plaid.model.risk_check_email_domain_is_free_provider import RiskCheckEmailDomainIsFreeProvider
from plaid.model.risk_check_email_is_deliverable_status import RiskCheckEmailIsDeliverableStatus
from plaid.model.risk_check_email_top_level_domain_is_suspicious import RiskCheckEmailTopLevelDomainIsSuspicious
from plaid.model.risk_check_linked_service import RiskCheckLinkedService
