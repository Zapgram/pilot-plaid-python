# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class WatchlistScreeningSearchTerms(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Search terms for creating an individual watchlist screening
    """


    class MetaOapg:
        required = {
            "country",
            "watchlist_program_id",
            "document_number",
            "date_of_birth",
            "legal_name",
            "version",
        }
        
        class properties:
            watchlist_program_id = schemas.StrSchema
        
            @staticmethod
            def legal_name() -> typing.Type['WatchlistScreeningIndividualName']:
                return WatchlistScreeningIndividualName
        
            @staticmethod
            def date_of_birth() -> typing.Type['ISO8601DateNullable']:
                return ISO8601DateNullable
        
            @staticmethod
            def document_number() -> typing.Type['WatchlistScreeningDocumentValueNullable']:
                return WatchlistScreeningDocumentValueNullable
        
            @staticmethod
            def country() -> typing.Type['GenericCountryCodeNullable']:
                return GenericCountryCodeNullable
            version = schemas.IntSchema
            __annotations__ = {
                "watchlist_program_id": watchlist_program_id,
                "legal_name": legal_name,
                "date_of_birth": date_of_birth,
                "document_number": document_number,
                "country": country,
                "version": version,
            }
        additional_properties = schemas.AnyTypeSchema
    
    country: 'GenericCountryCodeNullable'
    watchlist_program_id: MetaOapg.properties.watchlist_program_id
    document_number: 'WatchlistScreeningDocumentValueNullable'
    date_of_birth: 'ISO8601DateNullable'
    legal_name: 'WatchlistScreeningIndividualName'
    version: MetaOapg.properties.version
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["country"]) -> 'GenericCountryCodeNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["watchlist_program_id"]) -> MetaOapg.properties.watchlist_program_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["document_number"]) -> 'WatchlistScreeningDocumentValueNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_of_birth"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["legal_name"]) -> 'WatchlistScreeningIndividualName': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["version"]) -> MetaOapg.properties.version: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["country"], typing_extensions.Literal["watchlist_program_id"], typing_extensions.Literal["document_number"], typing_extensions.Literal["date_of_birth"], typing_extensions.Literal["legal_name"], typing_extensions.Literal["version"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["country"]) -> 'GenericCountryCodeNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["watchlist_program_id"]) -> MetaOapg.properties.watchlist_program_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["document_number"]) -> 'WatchlistScreeningDocumentValueNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_of_birth"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["legal_name"]) -> 'WatchlistScreeningIndividualName': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["version"]) -> MetaOapg.properties.version: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["country"], typing_extensions.Literal["watchlist_program_id"], typing_extensions.Literal["document_number"], typing_extensions.Literal["date_of_birth"], typing_extensions.Literal["legal_name"], typing_extensions.Literal["version"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        country: 'GenericCountryCodeNullable',
        watchlist_program_id: typing.Union[MetaOapg.properties.watchlist_program_id, str, ],
        document_number: 'WatchlistScreeningDocumentValueNullable',
        date_of_birth: 'ISO8601DateNullable',
        legal_name: 'WatchlistScreeningIndividualName',
        version: typing.Union[MetaOapg.properties.version, decimal.Decimal, int, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'WatchlistScreeningSearchTerms':
        return super().__new__(
            cls,
            *_args,
            country=country,
            watchlist_program_id=watchlist_program_id,
            document_number=document_number,
            date_of_birth=date_of_birth,
            legal_name=legal_name,
            version=version,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.generic_country_code_nullable import GenericCountryCodeNullable
from plaid.model.iso8601_date_nullable import ISO8601DateNullable
from plaid.model.watchlist_screening_document_value_nullable import WatchlistScreeningDocumentValueNullable
from plaid.model.watchlist_screening_individual_name import WatchlistScreeningIndividualName
