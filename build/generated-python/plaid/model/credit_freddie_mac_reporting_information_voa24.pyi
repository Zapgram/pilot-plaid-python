# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class CreditFreddieMacReportingInformationVOA24(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Information about an report identifier and a report name.
    """


    class MetaOapg:
        required = {
            "ReportingInformationIdentifier",
        }
        
        class properties:
            ReportingInformationIdentifier = schemas.StrSchema
            ReportDateTime = schemas.StrSchema
            ReportIdentifierType = schemas.StrSchema
            __annotations__ = {
                "ReportingInformationIdentifier": ReportingInformationIdentifier,
                "ReportDateTime": ReportDateTime,
                "ReportIdentifierType": ReportIdentifierType,
            }
        additional_properties = schemas.AnyTypeSchema
    
    ReportingInformationIdentifier: MetaOapg.properties.ReportingInformationIdentifier
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ReportingInformationIdentifier"]) -> MetaOapg.properties.ReportingInformationIdentifier: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ReportDateTime"]) -> MetaOapg.properties.ReportDateTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ReportIdentifierType"]) -> MetaOapg.properties.ReportIdentifierType: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["ReportingInformationIdentifier"], typing_extensions.Literal["ReportDateTime"], typing_extensions.Literal["ReportIdentifierType"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ReportingInformationIdentifier"]) -> MetaOapg.properties.ReportingInformationIdentifier: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ReportDateTime"]) -> typing.Union[MetaOapg.properties.ReportDateTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ReportIdentifierType"]) -> typing.Union[MetaOapg.properties.ReportIdentifierType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["ReportingInformationIdentifier"], typing_extensions.Literal["ReportDateTime"], typing_extensions.Literal["ReportIdentifierType"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        ReportingInformationIdentifier: typing.Union[MetaOapg.properties.ReportingInformationIdentifier, str, ],
        ReportDateTime: typing.Union[MetaOapg.properties.ReportDateTime, str, schemas.Unset] = schemas.unset,
        ReportIdentifierType: typing.Union[MetaOapg.properties.ReportIdentifierType, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'CreditFreddieMacReportingInformationVOA24':
        return super().__new__(
            cls,
            *_args,
            ReportingInformationIdentifier=ReportingInformationIdentifier,
            ReportDateTime=ReportDateTime,
            ReportIdentifierType=ReportIdentifierType,
            _configuration=_configuration,
            **kwargs,
        )
