# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class PlaidErrorType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    A broad categorization of the error. Safe for programmatic use.
    """


    class MetaOapg:
        enum_value_to_name = {
            "INVALID_REQUEST": "INVALID_REQUEST",
            "INVALID_RESULT": "INVALID_RESULT",
            "INVALID_INPUT": "INVALID_INPUT",
            "INSTITUTION_ERROR": "INSTITUTION_ERROR",
            "RATE_LIMIT_EXCEEDED": "RATE_LIMIT_EXCEEDED",
            "API_ERROR": "API_ERROR",
            "ITEM_ERROR": "ITEM_ERROR",
            "ASSET_REPORT_ERROR": "ASSET_REPORT_ERROR",
            "RECAPTCHA_ERROR": "RECAPTCHA_ERROR",
            "OAUTH_ERROR": "OAUTH_ERROR",
            "PAYMENT_ERROR": "PAYMENT_ERROR",
            "BANK_TRANSFER_ERROR": "BANK_TRANSFER_ERROR",
            "INCOME_VERIFICATION_ERROR": "INCOME_VERIFICATION_ERROR",
            "MICRODEPOSITS_ERROR": "MICRODEPOSITS_ERROR",
        }
    
    @schemas.classproperty
    def INVALID_REQUEST(cls):
        return cls("INVALID_REQUEST")
    
    @schemas.classproperty
    def INVALID_RESULT(cls):
        return cls("INVALID_RESULT")
    
    @schemas.classproperty
    def INVALID_INPUT(cls):
        return cls("INVALID_INPUT")
    
    @schemas.classproperty
    def INSTITUTION_ERROR(cls):
        return cls("INSTITUTION_ERROR")
    
    @schemas.classproperty
    def RATE_LIMIT_EXCEEDED(cls):
        return cls("RATE_LIMIT_EXCEEDED")
    
    @schemas.classproperty
    def API_ERROR(cls):
        return cls("API_ERROR")
    
    @schemas.classproperty
    def ITEM_ERROR(cls):
        return cls("ITEM_ERROR")
    
    @schemas.classproperty
    def ASSET_REPORT_ERROR(cls):
        return cls("ASSET_REPORT_ERROR")
    
    @schemas.classproperty
    def RECAPTCHA_ERROR(cls):
        return cls("RECAPTCHA_ERROR")
    
    @schemas.classproperty
    def OAUTH_ERROR(cls):
        return cls("OAUTH_ERROR")
    
    @schemas.classproperty
    def PAYMENT_ERROR(cls):
        return cls("PAYMENT_ERROR")
    
    @schemas.classproperty
    def BANK_TRANSFER_ERROR(cls):
        return cls("BANK_TRANSFER_ERROR")
    
    @schemas.classproperty
    def INCOME_VERIFICATION_ERROR(cls):
        return cls("INCOME_VERIFICATION_ERROR")
    
    @schemas.classproperty
    def MICRODEPOSITS_ERROR(cls):
        return cls("MICRODEPOSITS_ERROR")
