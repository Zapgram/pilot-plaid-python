# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class ScreeningHitData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Information associated with the watchlist hit
    """


    class MetaOapg:
        
        class properties:
            
            
            class dates_of_birth(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ScreeningHitDateOfBirthItem']:
                        return ScreeningHitDateOfBirthItem
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['ScreeningHitDateOfBirthItem'], typing.List['ScreeningHitDateOfBirthItem']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'dates_of_birth':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ScreeningHitDateOfBirthItem':
                    return super().__getitem__(i)
            
            
            class documents(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ScreeningHitDocumentsItems']:
                        return ScreeningHitDocumentsItems
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['ScreeningHitDocumentsItems'], typing.List['ScreeningHitDocumentsItems']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'documents':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ScreeningHitDocumentsItems':
                    return super().__getitem__(i)
            
            
            class locations(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['GenericScreeningHitLocationItems']:
                        return GenericScreeningHitLocationItems
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['GenericScreeningHitLocationItems'], typing.List['GenericScreeningHitLocationItems']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'locations':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'GenericScreeningHitLocationItems':
                    return super().__getitem__(i)
            
            
            class names(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ScreeningHitNamesItems']:
                        return ScreeningHitNamesItems
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['ScreeningHitNamesItems'], typing.List['ScreeningHitNamesItems']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'names':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ScreeningHitNamesItems':
                    return super().__getitem__(i)
            __annotations__ = {
                "dates_of_birth": dates_of_birth,
                "documents": documents,
                "locations": locations,
                "names": names,
            }
        additional_properties = schemas.AnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dates_of_birth"]) -> MetaOapg.properties.dates_of_birth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["documents"]) -> MetaOapg.properties.documents: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locations"]) -> MetaOapg.properties.locations: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["names"]) -> MetaOapg.properties.names: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["dates_of_birth"], typing_extensions.Literal["documents"], typing_extensions.Literal["locations"], typing_extensions.Literal["names"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dates_of_birth"]) -> typing.Union[MetaOapg.properties.dates_of_birth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["documents"]) -> typing.Union[MetaOapg.properties.documents, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locations"]) -> typing.Union[MetaOapg.properties.locations, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["names"]) -> typing.Union[MetaOapg.properties.names, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["dates_of_birth"], typing_extensions.Literal["documents"], typing_extensions.Literal["locations"], typing_extensions.Literal["names"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        dates_of_birth: typing.Union[MetaOapg.properties.dates_of_birth, list, tuple, schemas.Unset] = schemas.unset,
        documents: typing.Union[MetaOapg.properties.documents, list, tuple, schemas.Unset] = schemas.unset,
        locations: typing.Union[MetaOapg.properties.locations, list, tuple, schemas.Unset] = schemas.unset,
        names: typing.Union[MetaOapg.properties.names, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'ScreeningHitData':
        return super().__new__(
            cls,
            *_args,
            dates_of_birth=dates_of_birth,
            documents=documents,
            locations=locations,
            names=names,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.generic_screening_hit_location_items import GenericScreeningHitLocationItems
from plaid.model.screening_hit_date_of_birth_item import ScreeningHitDateOfBirthItem
from plaid.model.screening_hit_documents_items import ScreeningHitDocumentsItems
from plaid.model.screening_hit_names_items import ScreeningHitNamesItems
