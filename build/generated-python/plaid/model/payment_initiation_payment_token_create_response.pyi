# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class PaymentInitiationPaymentTokenCreateResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    PaymentInitiationPaymentTokenCreateResponse defines the response schema for `/payment_initiation/payment/token/create`
    """


    class MetaOapg:
        required = {
            "payment_token_expiration_time",
            "payment_token",
            "request_id",
        }
        
        class properties:
            payment_token = schemas.StrSchema
            payment_token_expiration_time = schemas.DateTimeSchema
            request_id = schemas.StrSchema
            __annotations__ = {
                "payment_token": payment_token,
                "payment_token_expiration_time": payment_token_expiration_time,
                "request_id": request_id,
            }
        additional_properties = schemas.AnyTypeSchema
    
    payment_token_expiration_time: MetaOapg.properties.payment_token_expiration_time
    payment_token: MetaOapg.properties.payment_token
    request_id: MetaOapg.properties.request_id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payment_token_expiration_time"]) -> MetaOapg.properties.payment_token_expiration_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payment_token"]) -> MetaOapg.properties.payment_token: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["request_id"]) -> MetaOapg.properties.request_id: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["payment_token_expiration_time"], typing_extensions.Literal["payment_token"], typing_extensions.Literal["request_id"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payment_token_expiration_time"]) -> MetaOapg.properties.payment_token_expiration_time: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payment_token"]) -> MetaOapg.properties.payment_token: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["request_id"]) -> MetaOapg.properties.request_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["payment_token_expiration_time"], typing_extensions.Literal["payment_token"], typing_extensions.Literal["request_id"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        payment_token_expiration_time: typing.Union[MetaOapg.properties.payment_token_expiration_time, str, datetime, ],
        payment_token: typing.Union[MetaOapg.properties.payment_token, str, ],
        request_id: typing.Union[MetaOapg.properties.request_id, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'PaymentInitiationPaymentTokenCreateResponse':
        return super().__new__(
            cls,
            *_args,
            payment_token_expiration_time=payment_token_expiration_time,
            payment_token=payment_token,
            request_id=request_id,
            _configuration=_configuration,
            **kwargs,
        )
