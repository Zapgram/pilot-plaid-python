# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class StudentLoanRepaymentModel(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Student loan repayment information used to configure Sandbox test data for the Liabilities product
    """


    class MetaOapg:
        required = {
            "non_repayment_months",
            "repayment_months",
            "type",
        }
        
        class properties:
            type = schemas.StrSchema
            non_repayment_months = schemas.NumberSchema
            repayment_months = schemas.NumberSchema
            __annotations__ = {
                "type": type,
                "non_repayment_months": non_repayment_months,
                "repayment_months": repayment_months,
            }
        additional_properties = schemas.AnyTypeSchema
    
    non_repayment_months: MetaOapg.properties.non_repayment_months
    repayment_months: MetaOapg.properties.repayment_months
    type: MetaOapg.properties.type
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["non_repayment_months"]) -> MetaOapg.properties.non_repayment_months: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["repayment_months"]) -> MetaOapg.properties.repayment_months: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["type"]) -> MetaOapg.properties.type: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["non_repayment_months"], typing_extensions.Literal["repayment_months"], typing_extensions.Literal["type"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["non_repayment_months"]) -> MetaOapg.properties.non_repayment_months: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["repayment_months"]) -> MetaOapg.properties.repayment_months: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["type"]) -> MetaOapg.properties.type: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["non_repayment_months"], typing_extensions.Literal["repayment_months"], typing_extensions.Literal["type"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        non_repayment_months: typing.Union[MetaOapg.properties.non_repayment_months, decimal.Decimal, int, float, ],
        repayment_months: typing.Union[MetaOapg.properties.repayment_months, decimal.Decimal, int, float, ],
        type: typing.Union[MetaOapg.properties.type, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'StudentLoanRepaymentModel':
        return super().__new__(
            cls,
            *_args,
            non_repayment_months=non_repayment_months,
            repayment_months=repayment_months,
            type=type,
            _configuration=_configuration,
            **kwargs,
        )
