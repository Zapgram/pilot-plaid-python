# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class MatchSummaryCode(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    An enum indicating the match type between data provided by user and data checked against an external data source.


`match` indicates that the provided input data was a strong match against external data.

`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.

`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.

`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.

`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
    """


    class MetaOapg:
        enum_value_to_name = {
            "match": "MATCH",
            "partial_match": "PARTIAL_MATCH",
            "no_match": "NO_MATCH",
            "no_data": "NO_DATA",
            "no_input": "NO_INPUT",
        }
    
    @schemas.classproperty
    def MATCH(cls):
        return cls("match")
    
    @schemas.classproperty
    def PARTIAL_MATCH(cls):
        return cls("partial_match")
    
    @schemas.classproperty
    def NO_MATCH(cls):
        return cls("no_match")
    
    @schemas.classproperty
    def NO_DATA(cls):
        return cls("no_data")
    
    @schemas.classproperty
    def NO_INPUT(cls):
        return cls("no_input")
