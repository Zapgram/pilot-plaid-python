# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class TransferQuestionnaireCreateRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Defines the request schema for `/transfer/questionnaire/create`
    """


    class MetaOapg:
        required = {
            "originator_client_id",
            "redirect_uri",
        }
        
        class properties:
            originator_client_id = schemas.StrSchema
            redirect_uri = schemas.StrSchema
            client_id = schemas.StrSchema
            secret = schemas.StrSchema
            __annotations__ = {
                "originator_client_id": originator_client_id,
                "redirect_uri": redirect_uri,
                "client_id": client_id,
                "secret": secret,
            }
    
    originator_client_id: MetaOapg.properties.originator_client_id
    redirect_uri: MetaOapg.properties.redirect_uri
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["originator_client_id"]) -> MetaOapg.properties.originator_client_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["redirect_uri"]) -> MetaOapg.properties.redirect_uri: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_id"]) -> MetaOapg.properties.client_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secret"]) -> MetaOapg.properties.secret: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["originator_client_id", "redirect_uri", "client_id", "secret", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["originator_client_id"]) -> MetaOapg.properties.originator_client_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["redirect_uri"]) -> MetaOapg.properties.redirect_uri: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_id"]) -> typing.Union[MetaOapg.properties.client_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secret"]) -> typing.Union[MetaOapg.properties.secret, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["originator_client_id", "redirect_uri", "client_id", "secret", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        originator_client_id: typing.Union[MetaOapg.properties.originator_client_id, str, ],
        redirect_uri: typing.Union[MetaOapg.properties.redirect_uri, str, ],
        client_id: typing.Union[MetaOapg.properties.client_id, str, schemas.Unset] = schemas.unset,
        secret: typing.Union[MetaOapg.properties.secret, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'TransferQuestionnaireCreateRequest':
        return super().__new__(
            cls,
            *_args,
            originator_client_id=originator_client_id,
            redirect_uri=redirect_uri,
            client_id=client_id,
            secret=secret,
            _configuration=_configuration,
            **kwargs,
        )
