# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class PaymentInitiationConsent(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    PaymentInitiationConsent defines a payment initiation consent.
    """


    class MetaOapg:
        required = {
            "reference",
            "created_at",
            "scopes",
            "constraints",
            "consent_id",
            "recipient_id",
            "status",
        }
        
        class properties:
            
            
            class consent_id(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    min_length = 1
        
            @staticmethod
            def status() -> typing.Type['PaymentInitiationConsentStatus']:
                return PaymentInitiationConsentStatus
            created_at = schemas.DateTimeSchema
            
            
            class recipient_id(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    min_length = 1
            reference = schemas.StrSchema
        
            @staticmethod
            def constraints() -> typing.Type['PaymentInitiationConsentConstraints']:
                return PaymentInitiationConsentConstraints
            
            
            class scopes(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['PaymentInitiationConsentScope']:
                        return PaymentInitiationConsentScope
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['PaymentInitiationConsentScope'], typing.List['PaymentInitiationConsentScope']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'scopes':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'PaymentInitiationConsentScope':
                    return super().__getitem__(i)
            __annotations__ = {
                "consent_id": consent_id,
                "status": status,
                "created_at": created_at,
                "recipient_id": recipient_id,
                "reference": reference,
                "constraints": constraints,
                "scopes": scopes,
            }
        additional_properties = schemas.AnyTypeSchema
    
    reference: MetaOapg.properties.reference
    created_at: MetaOapg.properties.created_at
    scopes: MetaOapg.properties.scopes
    constraints: 'PaymentInitiationConsentConstraints'
    consent_id: MetaOapg.properties.consent_id
    recipient_id: MetaOapg.properties.recipient_id
    status: 'PaymentInitiationConsentStatus'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reference"]) -> MetaOapg.properties.reference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_at"]) -> MetaOapg.properties.created_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scopes"]) -> MetaOapg.properties.scopes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["constraints"]) -> 'PaymentInitiationConsentConstraints': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["consent_id"]) -> MetaOapg.properties.consent_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recipient_id"]) -> MetaOapg.properties.recipient_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> 'PaymentInitiationConsentStatus': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["reference"], typing_extensions.Literal["created_at"], typing_extensions.Literal["scopes"], typing_extensions.Literal["constraints"], typing_extensions.Literal["consent_id"], typing_extensions.Literal["recipient_id"], typing_extensions.Literal["status"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reference"]) -> MetaOapg.properties.reference: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_at"]) -> MetaOapg.properties.created_at: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scopes"]) -> MetaOapg.properties.scopes: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["constraints"]) -> 'PaymentInitiationConsentConstraints': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["consent_id"]) -> MetaOapg.properties.consent_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recipient_id"]) -> MetaOapg.properties.recipient_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> 'PaymentInitiationConsentStatus': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["reference"], typing_extensions.Literal["created_at"], typing_extensions.Literal["scopes"], typing_extensions.Literal["constraints"], typing_extensions.Literal["consent_id"], typing_extensions.Literal["recipient_id"], typing_extensions.Literal["status"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        reference: typing.Union[MetaOapg.properties.reference, str, ],
        created_at: typing.Union[MetaOapg.properties.created_at, str, datetime, ],
        scopes: typing.Union[MetaOapg.properties.scopes, list, tuple, ],
        constraints: 'PaymentInitiationConsentConstraints',
        consent_id: typing.Union[MetaOapg.properties.consent_id, str, ],
        recipient_id: typing.Union[MetaOapg.properties.recipient_id, str, ],
        status: 'PaymentInitiationConsentStatus',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'PaymentInitiationConsent':
        return super().__new__(
            cls,
            *_args,
            reference=reference,
            created_at=created_at,
            scopes=scopes,
            constraints=constraints,
            consent_id=consent_id,
            recipient_id=recipient_id,
            status=status,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.payment_initiation_consent_constraints import PaymentInitiationConsentConstraints
from plaid.model.payment_initiation_consent_scope import PaymentInitiationConsentScope
from plaid.model.payment_initiation_consent_status import PaymentInitiationConsentStatus
