# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class SignalPaymentMethod(
    schemas.EnumBase,
    schemas.StrBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneStrMixin
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The payment method to complete the transaction after the risk assessment. It may be different from the default payment method.

`SAME_DAY_ACH`: Same Day ACH by NACHA. The debit transaction is processed and settled on the same day

`NEXT_DAY_ACH`: Next Day ACH settlement for debit transactions, offered by some payment processors

`STANDARD_ACH`: standard ACH by NACHA

`REAL_TIME_PAYMENTS`: real-time payments such as RTP and FedNow

`DEBIT_CARD`: if the default payment is over debit card networks

`MULTIPLE_PAYMENT_METHODS`: if there is no default debit rail or there are multiple payment methods

Possible values: `SAME_DAY_ACH`, `NEXT_DAY_ACH`, `STANDARD_ACH`, `REAL_TIME_PAYMENTS`, `DEBIT_CARD`, `MULTIPLE_PAYMENT_METHODS`

    """


    class MetaOapg:
        enum_value_to_name = {
            "SAME_DAY_ACH": "SAME_DAY_ACH",
            "NEXT_DAY_ACH": "NEXT_DAY_ACH",
            "STANDARD_ACH": "STANDARD_ACH",
            "REAL_TIME_PAYMENTS": "REAL_TIME_PAYMENTS",
            "DEBIT_CARD": "DEBIT_CARD",
            "MULTIPLE_PAYMENT_METHODS": "MULTIPLE_PAYMENT_METHODS",
        }
    
    @schemas.classproperty
    def SAME_DAY_ACH(cls):
        return cls("SAME_DAY_ACH")
    
    @schemas.classproperty
    def NEXT_DAY_ACH(cls):
        return cls("NEXT_DAY_ACH")
    
    @schemas.classproperty
    def STANDARD_ACH(cls):
        return cls("STANDARD_ACH")
    
    @schemas.classproperty
    def REAL_TIME_PAYMENTS(cls):
        return cls("REAL_TIME_PAYMENTS")
    
    @schemas.classproperty
    def DEBIT_CARD(cls):
        return cls("DEBIT_CARD")
    
    @schemas.classproperty
    def MULTIPLE_PAYMENT_METHODS(cls):
        return cls("MULTIPLE_PAYMENT_METHODS")


    def __new__(
        cls,
        *_args: typing.Union[None, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'SignalPaymentMethod':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
        )
