# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class AuthSupportedMethods(
    schemas.DictBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneFrozenDictMixin
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Metadata specifically related to which auth methods an institution supports.
    """


    class MetaOapg:
        required = {
            "automated_micro_deposits",
            "instant_match",
            "instant_auth",
        }
        
        class properties:
            instant_auth = schemas.BoolSchema
            instant_match = schemas.BoolSchema
            automated_micro_deposits = schemas.BoolSchema
            __annotations__ = {
                "instant_auth": instant_auth,
                "instant_match": instant_match,
                "automated_micro_deposits": automated_micro_deposits,
            }
        additional_properties = schemas.AnyTypeSchema

    
    automated_micro_deposits: MetaOapg.properties.automated_micro_deposits
    instant_match: MetaOapg.properties.instant_match
    instant_auth: MetaOapg.properties.instant_auth
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["automated_micro_deposits"]) -> MetaOapg.properties.automated_micro_deposits: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["instant_match"]) -> MetaOapg.properties.instant_match: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["instant_auth"]) -> MetaOapg.properties.instant_auth: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["automated_micro_deposits"], typing_extensions.Literal["instant_match"], typing_extensions.Literal["instant_auth"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["automated_micro_deposits"]) -> MetaOapg.properties.automated_micro_deposits: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["instant_match"]) -> MetaOapg.properties.instant_match: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["instant_auth"]) -> MetaOapg.properties.instant_auth: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["automated_micro_deposits"], typing_extensions.Literal["instant_match"], typing_extensions.Literal["instant_auth"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, None, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'AuthSupportedMethods':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
            **kwargs,
        )
