# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class LinkUserDeliveryStatusWebhook(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Webhook indicating that the status of the delivery of the hosted link session to a user
    """


    class MetaOapg:
        required = {
            "link_delivery_metadata",
            "webhook_type",
            "link_delivery_session_id",
            "webhook_code",
            "timestamp",
        }
        
        class properties:
            webhook_type = schemas.StrSchema
            webhook_code = schemas.StrSchema
            link_delivery_session_id = schemas.StrSchema
            timestamp = schemas.StrSchema
        
            @staticmethod
            def link_delivery_metadata() -> typing.Type['LinkDeliveryMetadata']:
                return LinkDeliveryMetadata
            __annotations__ = {
                "webhook_type": webhook_type,
                "webhook_code": webhook_code,
                "link_delivery_session_id": link_delivery_session_id,
                "timestamp": timestamp,
                "link_delivery_metadata": link_delivery_metadata,
            }
        additional_properties = schemas.AnyTypeSchema
    
    link_delivery_metadata: 'LinkDeliveryMetadata'
    webhook_type: MetaOapg.properties.webhook_type
    link_delivery_session_id: MetaOapg.properties.link_delivery_session_id
    webhook_code: MetaOapg.properties.webhook_code
    timestamp: MetaOapg.properties.timestamp
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["link_delivery_metadata"]) -> 'LinkDeliveryMetadata': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["webhook_type"]) -> MetaOapg.properties.webhook_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["link_delivery_session_id"]) -> MetaOapg.properties.link_delivery_session_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["webhook_code"]) -> MetaOapg.properties.webhook_code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["link_delivery_metadata"], typing_extensions.Literal["webhook_type"], typing_extensions.Literal["link_delivery_session_id"], typing_extensions.Literal["webhook_code"], typing_extensions.Literal["timestamp"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["link_delivery_metadata"]) -> 'LinkDeliveryMetadata': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["webhook_type"]) -> MetaOapg.properties.webhook_type: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["link_delivery_session_id"]) -> MetaOapg.properties.link_delivery_session_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["webhook_code"]) -> MetaOapg.properties.webhook_code: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["link_delivery_metadata"], typing_extensions.Literal["webhook_type"], typing_extensions.Literal["link_delivery_session_id"], typing_extensions.Literal["webhook_code"], typing_extensions.Literal["timestamp"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        link_delivery_metadata: 'LinkDeliveryMetadata',
        webhook_type: typing.Union[MetaOapg.properties.webhook_type, str, ],
        link_delivery_session_id: typing.Union[MetaOapg.properties.link_delivery_session_id, str, ],
        webhook_code: typing.Union[MetaOapg.properties.webhook_code, str, ],
        timestamp: typing.Union[MetaOapg.properties.timestamp, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'LinkUserDeliveryStatusWebhook':
        return super().__new__(
            cls,
            *_args,
            link_delivery_metadata=link_delivery_metadata,
            webhook_type=webhook_type,
            link_delivery_session_id=link_delivery_session_id,
            webhook_code=webhook_code,
            timestamp=timestamp,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.link_delivery_metadata import LinkDeliveryMetadata
