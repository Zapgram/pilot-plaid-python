# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class PaymentScheme(
    schemas.EnumBase,
    schemas.StrBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneStrMixin
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Payment scheme. If not specified - the default in the region will be used (e.g. `SEPA_CREDIT_TRANSFER` for EU). Using unsupported values will result in a failed payment.

`LOCAL_DEFAULT`: The default payment scheme for the selected market and currency will be used.

`LOCAL_INSTANT`: The instant payment scheme for the selected market and currency will be used (if applicable). Fees may be applied by the institution. If the market does not support an Instant Scheme (e.g. Denmark), the default in the region will be used.

`SEPA_CREDIT_TRANSFER`: The standard payment to a beneficiary within the SEPA area.

`SEPA_CREDIT_TRANSFER_INSTANT`: Instant payment within the SEPA area. May involve additional fees and may not be available at some banks.
    """


    class MetaOapg:
        enum_value_to_name = {
            schemas.NoneClass.NONE: "NONE",
            "LOCAL_DEFAULT": "LOCAL_DEFAULT",
            "LOCAL_INSTANT": "LOCAL_INSTANT",
            "SEPA_CREDIT_TRANSFER": "SEPA_CREDIT_TRANSFER",
            "SEPA_CREDIT_TRANSFER_INSTANT": "SEPA_CREDIT_TRANSFER_INSTANT",
        }
    
    @schemas.classproperty
    def NONE(cls):
        return cls(None)
    
    @schemas.classproperty
    def LOCAL_DEFAULT(cls):
        return cls("LOCAL_DEFAULT")
    
    @schemas.classproperty
    def LOCAL_INSTANT(cls):
        return cls("LOCAL_INSTANT")
    
    @schemas.classproperty
    def SEPA_CREDIT_TRANSFER(cls):
        return cls("SEPA_CREDIT_TRANSFER")
    
    @schemas.classproperty
    def SEPA_CREDIT_TRANSFER_INSTANT(cls):
        return cls("SEPA_CREDIT_TRANSFER_INSTANT")


    def __new__(
        cls,
        *_args: typing.Union[None, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'PaymentScheme':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
        )
