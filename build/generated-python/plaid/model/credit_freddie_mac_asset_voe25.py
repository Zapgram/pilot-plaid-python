# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class CreditFreddieMacAssetVOE25(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
    """


    class MetaOapg:
        required = {
            "ASSET_DETAIL",
            "ASSET_HOLDER",
            "ASSET_OWNERS",
            "ASSET_TRANSACTIONS",
        }
        
        class properties:
        
            @staticmethod
            def ASSET_DETAIL() -> typing.Type['CreditFreddieMacAssetDetailVOE25']:
                return CreditFreddieMacAssetDetailVOE25
        
            @staticmethod
            def ASSET_OWNERS() -> typing.Type['AssetOwners']:
                return AssetOwners
        
            @staticmethod
            def ASSET_HOLDER() -> typing.Type['AssetHolder']:
                return AssetHolder
        
            @staticmethod
            def ASSET_TRANSACTIONS() -> typing.Type['CreditFreddieMacAssetTransactionsVOE25']:
                return CreditFreddieMacAssetTransactionsVOE25
            __annotations__ = {
                "ASSET_DETAIL": ASSET_DETAIL,
                "ASSET_OWNERS": ASSET_OWNERS,
                "ASSET_HOLDER": ASSET_HOLDER,
                "ASSET_TRANSACTIONS": ASSET_TRANSACTIONS,
            }
        additional_properties = schemas.AnyTypeSchema
    
    ASSET_DETAIL: 'CreditFreddieMacAssetDetailVOE25'
    ASSET_HOLDER: 'AssetHolder'
    ASSET_OWNERS: 'AssetOwners'
    ASSET_TRANSACTIONS: 'CreditFreddieMacAssetTransactionsVOE25'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ASSET_DETAIL"]) -> 'CreditFreddieMacAssetDetailVOE25': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ASSET_HOLDER"]) -> 'AssetHolder': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ASSET_OWNERS"]) -> 'AssetOwners': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ASSET_TRANSACTIONS"]) -> 'CreditFreddieMacAssetTransactionsVOE25': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["ASSET_DETAIL"], typing_extensions.Literal["ASSET_HOLDER"], typing_extensions.Literal["ASSET_OWNERS"], typing_extensions.Literal["ASSET_TRANSACTIONS"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ASSET_DETAIL"]) -> 'CreditFreddieMacAssetDetailVOE25': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ASSET_HOLDER"]) -> 'AssetHolder': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ASSET_OWNERS"]) -> 'AssetOwners': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ASSET_TRANSACTIONS"]) -> 'CreditFreddieMacAssetTransactionsVOE25': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["ASSET_DETAIL"], typing_extensions.Literal["ASSET_HOLDER"], typing_extensions.Literal["ASSET_OWNERS"], typing_extensions.Literal["ASSET_TRANSACTIONS"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        ASSET_DETAIL: 'CreditFreddieMacAssetDetailVOE25',
        ASSET_HOLDER: 'AssetHolder',
        ASSET_OWNERS: 'AssetOwners',
        ASSET_TRANSACTIONS: 'CreditFreddieMacAssetTransactionsVOE25',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'CreditFreddieMacAssetVOE25':
        return super().__new__(
            cls,
            *_args,
            ASSET_DETAIL=ASSET_DETAIL,
            ASSET_HOLDER=ASSET_HOLDER,
            ASSET_OWNERS=ASSET_OWNERS,
            ASSET_TRANSACTIONS=ASSET_TRANSACTIONS,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.asset_holder import AssetHolder
from plaid.model.asset_owners import AssetOwners
from plaid.model.credit_freddie_mac_asset_detail_voe25 import CreditFreddieMacAssetDetailVOE25
from plaid.model.credit_freddie_mac_asset_transactions_voe25 import CreditFreddieMacAssetTransactionsVOE25
