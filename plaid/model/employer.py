# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class Employer(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Data about the employer.
    """


    class MetaOapg:
        required = {
            "address",
            "confidence_score",
            "name",
            "employer_id",
        }
        
        class properties:
            employer_id = schemas.StrSchema
            name = schemas.StrSchema
        
            @staticmethod
            def address() -> typing.Type['AddressDataNullable']:
                return AddressDataNullable
            confidence_score = schemas.Float64Schema
            __annotations__ = {
                "employer_id": employer_id,
                "name": name,
                "address": address,
                "confidence_score": confidence_score,
            }
        additional_properties = schemas.AnyTypeSchema
    
    address: 'AddressDataNullable'
    confidence_score: MetaOapg.properties.confidence_score
    name: MetaOapg.properties.name
    employer_id: MetaOapg.properties.employer_id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["address"]) -> 'AddressDataNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["confidence_score"]) -> MetaOapg.properties.confidence_score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employer_id"]) -> MetaOapg.properties.employer_id: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["address"], typing_extensions.Literal["confidence_score"], typing_extensions.Literal["name"], typing_extensions.Literal["employer_id"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["address"]) -> 'AddressDataNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["confidence_score"]) -> MetaOapg.properties.confidence_score: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employer_id"]) -> MetaOapg.properties.employer_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["address"], typing_extensions.Literal["confidence_score"], typing_extensions.Literal["name"], typing_extensions.Literal["employer_id"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        address: 'AddressDataNullable',
        confidence_score: typing.Union[MetaOapg.properties.confidence_score, decimal.Decimal, int, float, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        employer_id: typing.Union[MetaOapg.properties.employer_id, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'Employer':
        return super().__new__(
            cls,
            *_args,
            address=address,
            confidence_score=confidence_score,
            name=name,
            employer_id=employer_id,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.address_data_nullable import AddressDataNullable
