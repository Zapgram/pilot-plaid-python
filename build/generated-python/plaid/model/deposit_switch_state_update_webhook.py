# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class DepositSwitchStateUpdateWebhook(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Fired when the status of a deposit switch request has changed.
    """


    class MetaOapg:
        
        class properties:
            webhook_type = schemas.StrSchema
            webhook_code = schemas.StrSchema
            state = schemas.StrSchema
            deposit_switch_id = schemas.StrSchema
        
            @staticmethod
            def environment() -> typing.Type['WebhookEnvironmentValues']:
                return WebhookEnvironmentValues
            __annotations__ = {
                "webhook_type": webhook_type,
                "webhook_code": webhook_code,
                "state": state,
                "deposit_switch_id": deposit_switch_id,
                "environment": environment,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["webhook_type"]) -> MetaOapg.properties.webhook_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["webhook_code"]) -> MetaOapg.properties.webhook_code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["state"]) -> MetaOapg.properties.state: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deposit_switch_id"]) -> MetaOapg.properties.deposit_switch_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["environment"]) -> 'WebhookEnvironmentValues': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["webhook_type", "webhook_code", "state", "deposit_switch_id", "environment", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["webhook_type"]) -> typing.Union[MetaOapg.properties.webhook_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["webhook_code"]) -> typing.Union[MetaOapg.properties.webhook_code, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["state"]) -> typing.Union[MetaOapg.properties.state, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deposit_switch_id"]) -> typing.Union[MetaOapg.properties.deposit_switch_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["environment"]) -> typing.Union['WebhookEnvironmentValues', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["webhook_type", "webhook_code", "state", "deposit_switch_id", "environment", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        webhook_type: typing.Union[MetaOapg.properties.webhook_type, str, schemas.Unset] = schemas.unset,
        webhook_code: typing.Union[MetaOapg.properties.webhook_code, str, schemas.Unset] = schemas.unset,
        state: typing.Union[MetaOapg.properties.state, str, schemas.Unset] = schemas.unset,
        deposit_switch_id: typing.Union[MetaOapg.properties.deposit_switch_id, str, schemas.Unset] = schemas.unset,
        environment: typing.Union['WebhookEnvironmentValues', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DepositSwitchStateUpdateWebhook':
        return super().__new__(
            cls,
            *_args,
            webhook_type=webhook_type,
            webhook_code=webhook_code,
            state=state,
            deposit_switch_id=deposit_switch_id,
            environment=environment,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.webhook_environment_values import WebhookEnvironmentValues
