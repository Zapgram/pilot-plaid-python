# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class EntityWatchlistScreeningHit(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Data from a government watchlist that has been attached to the screening.
    """


    class MetaOapg:
        required = {
            "inactive_since",
            "plaid_uid",
            "source_uid",
            "first_active",
            "id",
            "review_status",
            "list_code",
            "historical_since",
        }
        
        class properties:
            id = schemas.StrSchema
        
            @staticmethod
            def review_status() -> typing.Type['WatchlistScreeningHitStatus']:
                return WatchlistScreeningHitStatus
            first_active = schemas.DateTimeSchema
        
            @staticmethod
            def inactive_since() -> typing.Type['TimestampNullable']:
                return TimestampNullable
        
            @staticmethod
            def historical_since() -> typing.Type['TimestampNullable']:
                return TimestampNullable
        
            @staticmethod
            def list_code() -> typing.Type['EntityWatchlistCode']:
                return EntityWatchlistCode
            plaid_uid = schemas.StrSchema
        
            @staticmethod
            def source_uid() -> typing.Type['SourceUID']:
                return SourceUID
        
            @staticmethod
            def analysis() -> typing.Type['EntityScreeningHitAnalysis']:
                return EntityScreeningHitAnalysis
        
            @staticmethod
            def data() -> typing.Type['EntityScreeningHitData']:
                return EntityScreeningHitData
            __annotations__ = {
                "id": id,
                "review_status": review_status,
                "first_active": first_active,
                "inactive_since": inactive_since,
                "historical_since": historical_since,
                "list_code": list_code,
                "plaid_uid": plaid_uid,
                "source_uid": source_uid,
                "analysis": analysis,
                "data": data,
            }
        additional_properties = schemas.AnyTypeSchema
    
    inactive_since: 'TimestampNullable'
    plaid_uid: MetaOapg.properties.plaid_uid
    source_uid: 'SourceUID'
    first_active: MetaOapg.properties.first_active
    id: MetaOapg.properties.id
    review_status: 'WatchlistScreeningHitStatus'
    list_code: 'EntityWatchlistCode'
    historical_since: 'TimestampNullable'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["inactive_since"]) -> 'TimestampNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["plaid_uid"]) -> MetaOapg.properties.plaid_uid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source_uid"]) -> 'SourceUID': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_active"]) -> MetaOapg.properties.first_active: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["review_status"]) -> 'WatchlistScreeningHitStatus': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["list_code"]) -> 'EntityWatchlistCode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["historical_since"]) -> 'TimestampNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["analysis"]) -> 'EntityScreeningHitAnalysis': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["data"]) -> 'EntityScreeningHitData': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["inactive_since"], typing_extensions.Literal["plaid_uid"], typing_extensions.Literal["source_uid"], typing_extensions.Literal["first_active"], typing_extensions.Literal["id"], typing_extensions.Literal["review_status"], typing_extensions.Literal["list_code"], typing_extensions.Literal["historical_since"], typing_extensions.Literal["analysis"], typing_extensions.Literal["data"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["inactive_since"]) -> 'TimestampNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["plaid_uid"]) -> MetaOapg.properties.plaid_uid: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source_uid"]) -> 'SourceUID': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_active"]) -> MetaOapg.properties.first_active: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["review_status"]) -> 'WatchlistScreeningHitStatus': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["list_code"]) -> 'EntityWatchlistCode': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["historical_since"]) -> 'TimestampNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["analysis"]) -> typing.Union['EntityScreeningHitAnalysis', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["data"]) -> typing.Union['EntityScreeningHitData', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["inactive_since"], typing_extensions.Literal["plaid_uid"], typing_extensions.Literal["source_uid"], typing_extensions.Literal["first_active"], typing_extensions.Literal["id"], typing_extensions.Literal["review_status"], typing_extensions.Literal["list_code"], typing_extensions.Literal["historical_since"], typing_extensions.Literal["analysis"], typing_extensions.Literal["data"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        inactive_since: 'TimestampNullable',
        plaid_uid: typing.Union[MetaOapg.properties.plaid_uid, str, ],
        source_uid: 'SourceUID',
        first_active: typing.Union[MetaOapg.properties.first_active, str, datetime, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        review_status: 'WatchlistScreeningHitStatus',
        list_code: 'EntityWatchlistCode',
        historical_since: 'TimestampNullable',
        analysis: typing.Union['EntityScreeningHitAnalysis', schemas.Unset] = schemas.unset,
        data: typing.Union['EntityScreeningHitData', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'EntityWatchlistScreeningHit':
        return super().__new__(
            cls,
            *_args,
            inactive_since=inactive_since,
            plaid_uid=plaid_uid,
            source_uid=source_uid,
            first_active=first_active,
            id=id,
            review_status=review_status,
            list_code=list_code,
            historical_since=historical_since,
            analysis=analysis,
            data=data,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.entity_screening_hit_analysis import EntityScreeningHitAnalysis
from plaid.model.entity_screening_hit_data import EntityScreeningHitData
from plaid.model.entity_watchlist_code import EntityWatchlistCode
from plaid.model.source_uid import SourceUID
from plaid.model.timestamp_nullable import TimestampNullable
from plaid.model.watchlist_screening_hit_status import WatchlistScreeningHitStatus
