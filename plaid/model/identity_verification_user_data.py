# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class IdentityVerificationUserData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The identity data that was either collected from the user or provided via API in order to perform an identity verification.
    """


    class MetaOapg:
        required = {
            "id_number",
            "address",
            "email_address",
            "date_of_birth",
            "name",
            "ip_address",
        }
        
        class properties:
        
            @staticmethod
            def date_of_birth() -> typing.Type['ISO8601DateNullable']:
                return ISO8601DateNullable
        
            @staticmethod
            def ip_address() -> typing.Type['IPAddress']:
                return IPAddress
        
            @staticmethod
            def email_address() -> typing.Type['EmailAddressNullable']:
                return EmailAddressNullable
        
            @staticmethod
            def name() -> typing.Type['IdentityVerificationResponseUserName']:
                return IdentityVerificationResponseUserName
        
            @staticmethod
            def address() -> typing.Type['IdentityVerificationUserAddress']:
                return IdentityVerificationUserAddress
        
            @staticmethod
            def id_number() -> typing.Type['UserIDNumber']:
                return UserIDNumber
        
            @staticmethod
            def phone_number() -> typing.Type['IdentityVerificationUserPhoneNumber']:
                return IdentityVerificationUserPhoneNumber
            __annotations__ = {
                "date_of_birth": date_of_birth,
                "ip_address": ip_address,
                "email_address": email_address,
                "name": name,
                "address": address,
                "id_number": id_number,
                "phone_number": phone_number,
            }
        additional_properties = schemas.AnyTypeSchema
    
    id_number: 'UserIDNumber'
    address: 'IdentityVerificationUserAddress'
    email_address: 'EmailAddressNullable'
    date_of_birth: 'ISO8601DateNullable'
    name: 'IdentityVerificationResponseUserName'
    ip_address: 'IPAddress'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id_number"]) -> 'UserIDNumber': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["address"]) -> 'IdentityVerificationUserAddress': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email_address"]) -> 'EmailAddressNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_of_birth"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> 'IdentityVerificationResponseUserName': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ip_address"]) -> 'IPAddress': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone_number"]) -> 'IdentityVerificationUserPhoneNumber': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id_number"], typing_extensions.Literal["address"], typing_extensions.Literal["email_address"], typing_extensions.Literal["date_of_birth"], typing_extensions.Literal["name"], typing_extensions.Literal["ip_address"], typing_extensions.Literal["phone_number"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id_number"]) -> 'UserIDNumber': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["address"]) -> 'IdentityVerificationUserAddress': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email_address"]) -> 'EmailAddressNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_of_birth"]) -> 'ISO8601DateNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> 'IdentityVerificationResponseUserName': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ip_address"]) -> 'IPAddress': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone_number"]) -> typing.Union['IdentityVerificationUserPhoneNumber', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id_number"], typing_extensions.Literal["address"], typing_extensions.Literal["email_address"], typing_extensions.Literal["date_of_birth"], typing_extensions.Literal["name"], typing_extensions.Literal["ip_address"], typing_extensions.Literal["phone_number"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        id_number: 'UserIDNumber',
        address: 'IdentityVerificationUserAddress',
        email_address: 'EmailAddressNullable',
        date_of_birth: 'ISO8601DateNullable',
        name: 'IdentityVerificationResponseUserName',
        ip_address: 'IPAddress',
        phone_number: typing.Union['IdentityVerificationUserPhoneNumber', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'IdentityVerificationUserData':
        return super().__new__(
            cls,
            *_args,
            id_number=id_number,
            address=address,
            email_address=email_address,
            date_of_birth=date_of_birth,
            name=name,
            ip_address=ip_address,
            phone_number=phone_number,
            _configuration=_configuration,
            **kwargs,
        )

from plaid.model.email_address_nullable import EmailAddressNullable
from plaid.model.identity_verification_response_user_name import IdentityVerificationResponseUserName
from plaid.model.identity_verification_user_address import IdentityVerificationUserAddress
from plaid.model.identity_verification_user_phone_number import IdentityVerificationUserPhoneNumber
from plaid.model.ip_address import IPAddress
from plaid.model.iso8601_date_nullable import ISO8601DateNullable
from plaid.model.user_id_number import UserIDNumber
