# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.394.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from plaid import schemas  # noqa: F401


class TransferSweepStatus(
    schemas.EnumBase,
    schemas.StrBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneStrMixin
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The status of the sweep for the transfer.

`unswept`: The transfer hasn't been swept yet.
`swept`: The transfer was swept to the sweep account.
`swept_settled`: Credits are available to be withdrawn or debits have been deducted from the customerâ€™s business checking account.
`return_swept`: The transfer was returned, funds were pulled back or pushed back to the sweep account.
`null`: The transfer will never be swept (e.g. if the transfer is cancelled or returned before being swept)
    """


    class MetaOapg:
        enum_value_to_name = {
            schemas.NoneClass.NONE: "NONE",
            "unswept": "UNSWEPT",
            "swept": "SWEPT",
            "swept_settled": "SWEPT_SETTLED",
            "return_swept": "RETURN_SWEPT",
        }
    
    @schemas.classproperty
    def NONE(cls):
        return cls(None)
    
    @schemas.classproperty
    def UNSWEPT(cls):
        return cls("unswept")
    
    @schemas.classproperty
    def SWEPT(cls):
        return cls("swept")
    
    @schemas.classproperty
    def SWEPT_SETTLED(cls):
        return cls("swept_settled")
    
    @schemas.classproperty
    def RETURN_SWEPT(cls):
        return cls("return_swept")


    def __new__(
        cls,
        *_args: typing.Union[None, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'TransferSweepStatus':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
        )
